@model ReflectionIT.Mvc.Paging.PagingList<WalletWeb.Models.ViewModels.CustomerTransactionViewModel>
@using ReflectionIT.Mvc.Paging
@addTagHelper *, ReflectionIT.Mvc.Paging

@{
    Layout = "~/Views/Shared/_AdminLayout.cshtml";
    ViewData["Title"] = "Index";
}

<div class="main-content"> 
    <div class="row mb-4">
        <div class="col mb-3">
            <div class="card text-left">
                <div class="card-header bg-transparent">
                    <div class="row" style="align-items: center;">
                        <div class="col-md-6">
                            <div class="ul-card-widget__head-label">
                                <h5 class="text-18 font-weight-700 card-title">Customer Transactions</h5>
                            </div>
                        </div>                        
                    </div>
                </div>
                <div class="card-body">
                    @if (Model.Count() == 0)
                    {
                        <div class="alert alert-info">
                            No records found
                        </div>
                    }
                    else
                    {
                        <div class="table-responsive">

                            <form method="get" class="form-inline mb-4">
                                <input name="filter" class="form-control" placeholder="Search"
                                       value="@Model.RouteValue["Filter"]" />
                                <button type="submit" class="ml-3 btn btn-primary">
                                    <i class="ti-search"></i> Search
                                </button>
                            </form>
                            <table class="table">
                                <thead>
                                    <tr>
                                        <th scope="col">
                                            @Html.SortableHeaderFor(model => model.Id)
                                        </th>
                                        <th scope="col">
                                            @Html.SortableHeaderFor(model => model.AccountName)
                                        </th>
                                        <th scope="col">
                                            @Html.SortableHeaderFor(model => model.CustomerAccount.AccountNumber)
                                        </th>
                                        <th scope="col">
                                            @Html.SortableHeaderFor(model => model.Debit)
                                        </th>
                                        <th scope="col">
                                            @Html.SortableHeaderFor(model => model.Credit)
                                        </th>
                                        <th scope="col">
                                            @Html.SortableHeaderFor(model => model.Description)
                                        </th>
                                        <th scope="col">
                                            @Html.SortableHeaderFor(model => model.Created)
                                        </th>
                                    </tr>
                                </thead>
                                <tbody>
                                    @foreach (var item in Model)
                                    {
                                    <tr>
                                        <td>
                                            @Html.DisplayFor(modelItem => item.Id)
                                        </td>
                                        <td>
                                            @Html.DisplayFor(modelItem => item.AccountName)
                                        </td>
                                        <td>
                                            @Html.DisplayFor(modelItem => item.CustomerAccount.AccountNumber)
                                        </td>
                                        <td>
                                            @string.Format("{0:n}", item.Debit)
                                        </td>
                                        <td>
                                            @string.Format("{0:n}", item.Credit)
                                        </td>
                                        <td>
                                            @Html.DisplayFor(modelItem => item.Description)
                                        </td>

                                        <td>
                                            @Html.DisplayFor(modelItem => item.Created)
                                        </td>                                        

                                    </tr>
                                    }


                                </tbody>
                            </table>
                            <nav aria-label="users navigation">
                                <vc:pager paging-list="@Model" />
                            </nav>
                        </div>
                    }
                </div>
            </div>
        </div>        
    </div>
</div>
